name: CI

on:
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.x

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.nuget/packages
            ~\AppData\Local\NuGet\v3-cache
            C:\\Users\\runneradmin\\AppData\\Local\\NuGet\\v3-cache
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test (SQLite + DI; provider suites auto-skip) with coverage
        run: |
          dotnet test Tuxedo/tests/Tuxedo.Tests/Tuxedo.Tests.csproj \
            --configuration Release \
            --no-build \
            --logger "trx;LogFileName=test-results.trx" \
            --collect:"XPlat Code Coverage"
        continue-on-error: false

      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      - name: Generate coverage report
        shell: bash
        run: |
          REPORT_PATH=$(git ls-files -z | xargs -0 -I{} bash -lc 'echo {}' >/dev/null; echo "Tuxedo/tests/Tuxedo.Tests/TestResults")
          reportgenerator \
            -reports:"Tuxedo/tests/Tuxedo.Tests/TestResults/**/coverage.cobertura.xml" \
            -targetdir:"coverage-report" \
            -reporttypes:"HtmlInline_AzurePipelines;Cobertura"

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: Tuxedo/tests/Tuxedo.Tests/TestResults

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.os }}
          path: coverage-report
